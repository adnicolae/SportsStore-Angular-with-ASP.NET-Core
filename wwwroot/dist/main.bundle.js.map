{"version":3,"sources":["./ClientApp/$_gendir lazy","./ClientApp/app/app.component.css","./ClientApp/app/app.component.html","./ClientApp/app/app.component.ts","./ClientApp/app/app.module.ts","./ClientApp/app/models/model.module.ts","./ClientApp/app/models/repository.ts","./ClientApp/boot.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./ClientApp/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/$$_gendir lazy\n// module id = ./ClientApp/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/app.component.css\n// module id = ./ClientApp/app/app.component.css\n// module chunks = main","module.exports = \"<table class=\\\"table table-sm table-striped\\\">\\r\\n    <tr>\\r\\n        <th>Name</th>\\r\\n        <th>Category</th>\\r\\n        <th>Price</th>\\r\\n        <th>Supplier</th>\\r\\n        <th>Ratings</th>\\r\\n    </tr>\\r\\n    <tr *ngFor=\\\"let product of products\\\">\\r\\n        <td>{{product.name}}</td>\\r\\n        <td>{{product.category}}</td>\\r\\n        <td>{{product.price}}</td>\\r\\n        <td>{{product.supplier?.name || 'None'}}</td>\\r\\n        <td>{{product.ratings?.length || 0}}</td>\\r\\n    </tr>\\r\\n</table>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/app.component.html\n// module id = ./ClientApp/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { Repository } from \"./models/repository\";\r\nimport { Product } from \"./models/product.model\";\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    title = 'Angular & ASP.NET Core MVC';\r\n\r\n    // this will create a property with the same name, type and access which will be of type Repository which by default is populated with the JSON data from the Index view\r\n    constructor(private repo: Repository) { }\r\n\r\n    // the keyword 'this' is necessary\r\n    get product(): Product {\r\n        return this.repo.product;\r\n    }\r\n\r\n    get products(): Product[] {\r\n        return this.repo.products;\r\n    }\r\n    //title = no_such_object;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpModule } from \"@angular/http\";\nimport { ModelModule } from \"./models/model.module\";\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule, FormsModule, HttpModule, ModelModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/app.module.ts","import { NgModule } from \"@angular/core\";\r\nimport { Repository } from \"./repository\";\r\n\r\n// Decorator - provides Angular with metadata about the Repository building block\r\n// begins with @ followed by the decorator type and configuration properties\r\n// specify the required services\r\n@NgModule({\r\n    providers: [Repository]\r\n})\r\n\r\nexport class ModelModule { }\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/model.module.ts","import { Product } from \"./product.model\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Http, RequestMethod, Request, Response } from \"@angular/http\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/operator/map\";\r\n\r\nconst productsUrl = \"/api/products\";\r\n\r\n@Injectable()\r\nexport class Repository {\r\n    product: Product;\r\n    products: Product[];\r\n\r\n    // http class provides methods for making http requests\r\n    constructor(private http: Http) {\r\n        this.getProducts(true);\r\n    }\r\n\r\n    // sends the request and assigns productData with the data from the response\r\n    getProduct(id: number) {\r\n        this.sendRequest(RequestMethod.Get, productsUrl + \"/\" + id)\r\n            .subscribe(response => { this.product = response.json(); });\r\n    }\r\n\r\n    getProducts(related = false) {\r\n        this.sendRequest(RequestMethod.Get, productsUrl + \"?related=\" + related)\r\n            .subscribe(response => this.products = response);\r\n    }\r\n\r\n    // http.request is an Observable<Response> which will produce a Response when the request is complete\r\n    // the map method allows the observable to be transformed by parsing JSON from the HTTP reponse\r\n    private sendRequest(verb: RequestMethod, url: string, data?: any): Observable<any> {\r\n        return this.http.request(new Request({\r\n            method: verb,\r\n            url: url,\r\n            body: data\r\n        })).map(response => response.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/repository.ts","import { enableProdMode } from \"@angular/core\";\r\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\r\nimport { AppModule } from \"./app/app.module\";\r\n\r\nconst bootApplication = () => {\r\n    platformBrowserDynamic().bootstrapModule(AppModule);\r\n};\r\n\r\nif (module[\"hot\"]) {\r\n    module[\"hot\"].accept();\r\n    module[\"hot\"].dispose(() => {\r\n        const oldRootElem = document.querySelector(\"app-root\");\r\n        const newRootElem = document.createElement(\"app-root\");\r\n        oldRootElem.parentNode.insertBefore(newRootElem, oldRootElem);\r\n        platformBrowserDynamic().destroy();\r\n    });\r\n}\r\n\r\nif (document.readyState === \"complete\") {\r\n    bootApplication();\r\n} else {\r\n    document.addEventListener(\"DOMContentLoaded\", bootApplication);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/boot.ts"],"sourceRoot":"webpack:///"}