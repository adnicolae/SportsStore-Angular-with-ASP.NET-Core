{"version":3,"sources":["./ClientApp/$_gendir lazy","./ClientApp/app/app.component.css","./ClientApp/app/app.component.html","./ClientApp/app/app.component.ts","./ClientApp/app/app.module.ts","./ClientApp/app/models/configClasses.repository.ts","./ClientApp/app/models/model.module.ts","./ClientApp/app/models/product.model.ts","./ClientApp/app/models/repository.ts","./ClientApp/app/models/supplier.model.ts","./ClientApp/app/structure/categoryFilter.component.html","./ClientApp/app/structure/categoryFilter.component.ts","./ClientApp/app/structure/productDetail.component.html","./ClientApp/app/structure/productDetail.component.ts","./ClientApp/app/structure/productTable.component.html","./ClientApp/app/structure/productTable.component.ts","./ClientApp/boot.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./ClientApp/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/$$_gendir lazy\n// module id = ./ClientApp/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/app.component.css\n// module id = ./ClientApp/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n            <category-filter></category-filter>\\r\\n            <product-table></product-table>\\r\\n        </div>\\r\\n        <div class=\\\"col\\\">\\r\\n            <product-detail></product-detail>\\r\\n        </div>\\r\\n    </div>\\r\\n</div> \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/app.component.html\n// module id = ./ClientApp/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { Repository } from \"./models/repository\";\r\nimport { Product } from \"./models/product.model\";\r\nimport { Supplier } from \"./models/supplier.model\";\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    title = 'Angular & ASP.NET Core MVC';\r\n\r\n    // this will create a property with the same name, type and access which will be of type Repository which by default is populated with the JSON data from the Index view\r\n    constructor(private repo: Repository) { }\r\n\r\n    // the keyword 'this' is necessary\r\n    get product(): Product {\r\n        return this.repo.product;\r\n    }\r\n\r\n    get products(): Product[] {\r\n        return this.repo.products;\r\n    }\r\n\r\n    createProduct() {\r\n        this.repo.createProduct(new Product(0, \"X-Ray Scuba Mask\", \"Watersports\", 49.99, \"See what the fish are hiding\", this.repo.products[0].supplier));\r\n    }\r\n\r\n    createProductAndSupplier() {\r\n        let s = new Supplier(0, \"Rocket Shoe Corp\", \"Boston\", \"MA\");\r\n        let p = new Product(0, \"Rocket-Powered Shoes\", \"Running\", 100, \"Set a new record\", s);\r\n        this.repo.createProductAndSupplier(p, s);\r\n    }\r\n\r\n    //title = no_such_object;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpModule } from \"@angular/http\";\nimport { ModelModule } from \"./models/model.module\";\nimport { AppComponent } from './app.component';\nimport { ProductTableComponent } from \"./structure/productTable.component\";\r\nimport { CategoryFilterComponent } from \"./structure/categoryFilter.component\";\nimport { ProductDetailComponent } from \"./structure/productDetail.component\";\n\n@NgModule({\n  declarations: [\n      AppComponent,\n      ProductTableComponent,\n      CategoryFilterComponent,\n      ProductDetailComponent\n  ],\n  imports: [\n    BrowserModule, FormsModule, HttpModule, ModelModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/app.module.ts","// class used to specify filtering that will be applied to product data\r\nexport class Filter {\r\n    category?: string;\r\n    search?: string;\r\n    related: boolean = false;\r\n\r\n    reset() {\r\n        this.category = this.search = null;\r\n        this.related = false;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/configClasses.repository.ts","import { NgModule } from \"@angular/core\";\r\nimport { Repository } from \"./repository\";\r\n\r\n// Decorator - provides Angular with metadata about the Repository building block\r\n// begins with @ followed by the decorator type and configuration properties\r\n// specify the required services\r\n@NgModule({\r\n    providers: [Repository]\r\n})\r\n\r\nexport class ModelModule { }\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/model.module.ts","import { Supplier } from \"./supplier.model\";\r\nimport { Rating } from \"./rating.model\";\r\n\r\nexport class Product {\r\n    constructor(\r\n        public productId?: number,\r\n        public name?: string,\r\n        public category?: string,\r\n        public price?: number,\r\n        public description?: string,\r\n        public supplier?: Supplier,\r\n        public ratings?: Rating[]\r\n    ) {}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/product.model.ts","import { Product } from \"./product.model\";\r\nimport { Supplier } from \"./supplier.model\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Http, RequestMethod, Request, Response } from \"@angular/http\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/operator/map\";\r\nimport { Filter } from \"./configClasses.repository\";\r\n\r\nconst productsUrl = \"/api/products\";\r\nconst suppliersUrl = \"/api/suppliers\";\r\n\r\n@Injectable()\r\nexport class Repository {\r\n    private filterObject = new Filter();\r\n    product: Product;\r\n    products: Product[];\r\n    suppliers: Supplier[] = [];\r\n\r\n    // http class provides methods for making http requests\r\n    constructor(private http: Http) {\r\n        //this.filter.category = \"soccer\";\r\n        this.filter.related = true;\r\n        this.getProduct(1);\r\n        this.getProducts();\r\n    }\r\n\r\n    // sends the request and assigns productData with the data from the response\r\n    getProduct(id: number) {\r\n        this.sendRequest(RequestMethod.Get, productsUrl + \"/\" + id)\r\n            .subscribe(response => { this.product = response; });\r\n    }\r\n\r\n    getProducts(related = false) {\r\n        let url = productsUrl + \"?related=\" + this.filter.related;\r\n\r\n        if (this.filter.category) {\r\n            url += \"&category=\" + this.filter.category;\r\n        }\r\n\r\n        if (this.filter.search) {\r\n            url += \"&search=\" + this.filter.search;\r\n        }\r\n\r\n        this.sendRequest(RequestMethod.Get, url)\r\n            .subscribe(response => this.products = response);\r\n    }\r\n\r\n    getSuppliers() {\r\n        this.sendRequest(RequestMethod.Get, suppliersUrl)\r\n            .subscribe(response => this.suppliers = response);\r\n    }\r\n\r\n    createProduct(prod: Product) {\r\n        let data = {\r\n            name: prod.name,\r\n            category: prod.category,\r\n            description: prod.description,\r\n            price: prod.price,\r\n            supplier: prod.supplier ? prod.supplier.supplierId : 0\r\n        };\r\n\r\n        this.sendRequest(RequestMethod.Post, productsUrl, data)\r\n            .subscribe(response => {\r\n                prod.productId = response;\r\n                this.products.push(prod);\r\n            })\r\n    }\r\n\r\n    createProductAndSupplier(prod: Product, supp: Supplier) {\r\n        let data = {\r\n            name: supp.name,\r\n            city: supp.city,\r\n            state: supp.state\r\n        };\r\n\r\n        this.sendRequest(RequestMethod.Post, suppliersUrl, data)\r\n            .subscribe(response => {\r\n                supp.supplierId = response;\r\n                prod.supplier = supp;\r\n                this.suppliers.push(supp);\r\n                if (prod != null) {\r\n                    this.createProduct(prod);\r\n                }\r\n            });\r\n    }\r\n\r\n    get filter(): Filter {\r\n        return this.filterObject;\r\n    }\r\n\r\n    // http.request is an Observable<Response> which will produce a Response when the request is complete\r\n    // the map method allows the observable to be transformed by parsing JSON from the HTTP reponse\r\n    private sendRequest(verb: RequestMethod, url: string, data?: any): Observable<any> {\r\n        return this.http.request(new Request({\r\n            method: verb,\r\n            url: url,\r\n            body: data\r\n        })).map(response => response.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/repository.ts","export class Supplier {\r\n    constructor(\r\n        public supplierId?: number,\r\n        public name?: string,\r\n        public city?: string,\r\n        public state?: string\r\n    ){}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/models/supplier.model.ts","module.exports = \"<div class=\\\"m-1\\\">\\r\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"setCategory('soccer')\\\">Soccer</button>\\r\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"setCategory(chessCategory)\\\">\\r\\n        Chess\\r\\n    </button>\\r\\n    <button class=\\\"btn btn-primary\\\"\\r\\n                    (click)=\\\"setCategory('Water' + 'Sports')\\\">\\r\\n        Watersports\\r\\n    </button>\\r\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"setCategory(null)\\\">All</button>\\r\\n</div>  \\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/structure/categoryFilter.component.html\n// module id = ./ClientApp/app/structure/categoryFilter.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { Repository } from \"../models/repository\";\r\n@Component({\r\n        selector: \"category-filter\",\r\n        templateUrl: \"categoryFilter.component.html\"\r\n})\r\nexport class CategoryFilterComponent {\r\n    public chessCategory = \"chess\";\r\n        constructor(private repo: Repository) { }\r\n        setCategory(category: string) {\r\n                this.repo.filter.category = category;\r\n                this.repo.getProducts();\r\n        }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/structure/categoryFilter.component.ts","module.exports = \"<table class=\\\"table table-striped\\\">\\r\\n    <tr><th colspan=\\\"2\\\" class=\\\"bg-info\\\">Product</th></tr>\\r\\n    <tr>\\r\\n        <th>Name</th>\\r\\n        <td>{{product?.name || 'No Data'}}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n        <th>Category</th>\\r\\n        <td>{{product?.category || 'No Data'}}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n        <th>Description</th>\\r\\n        <td>{{product?.description || 'No Data'}}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n        <th>Price</th>\\r\\n        <td>{{product?.price  || 'No Data'}}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n        <th colspan=\\\"2\\\" class=\\\"bg-info\\\">Supplier</th>\\r\\n    </tr>\\r\\n    <tr>\\r\\n        <th>Name</th>\\r\\n        <td>{{product?.supplier?.name}}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n        <th>City</th>\\r\\n        <td>{{product?.supplier?.city}}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n        <th>State</th>\\r\\n        <td>{{product?.supplier?.state}}</td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n        <th>Products</th>\\r\\n        <td>{{product?.supplier?.products?.length}}</td>\\r\\n    </tr>\\r\\n</table>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/structure/productDetail.component.html\n// module id = ./ClientApp/app/structure/productDetail.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { Repository } from \"../models/repository\";\r\nimport { Product } from \"../models/product.model\";\r\n\r\n@Component({\r\n        selector: \"product-detail\",\r\n        templateUrl: \"productDetail.component.html\"\r\n})\r\n\r\nexport class ProductDetailComponent {\r\n    constructor(private repo: Repository) { }\r\n\r\n        get product(): Product {\r\n                return this.repo.product;\r\n        }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/structure/productDetail.component.ts","module.exports = \"<table class=\\\"table table-striped\\\">\\r\\n    <tr><th>Name</th><th>Category</th><th>Price</th><th></th></tr>\\r\\n    <tr *ngFor=\\\"let product of products\\\">\\r\\n        <td>{{product.name}}</td>\\r\\n        <td>{{product.category}}</td>\\r\\n        <td>{{product.price}}</td>\\r\\n        <td>\\r\\n            <button class=\\\"btn btn-primary btn-sm\\\"\\r\\n                                        (click)=\\\"selectProduct(product.productId)\\\">\\r\\n                Details\\r\\n            </button>\\r\\n        </td> \\r\\n    </tr>\\r\\n</table>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ClientApp/app/structure/productTable.component.html\n// module id = ./ClientApp/app/structure/productTable.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport { Repository } from \"../models/repository\";\r\nimport { Product } from \"../models/product.model\";\r\n@Component({\r\n        selector: \"product-table\",\r\n        templateUrl: \"./productTable.component.html\"\r\n})\r\nexport class ProductTableComponent {\r\n        constructor(private repo: Repository) { }\r\n        get products(): Product[] {\r\n                return this.repo.products;\r\n        }\r\n\r\n        selectProduct(id: number) {\r\n            this.repo.getProduct(id);\r\n        }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/app/structure/productTable.component.ts","import { enableProdMode } from \"@angular/core\";\r\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\r\nimport { AppModule } from \"./app/app.module\";\r\n\r\nconst bootApplication = () => {\r\n    platformBrowserDynamic().bootstrapModule(AppModule);\r\n};\r\n\r\nif (module[\"hot\"]) {\r\n    module[\"hot\"].accept();\r\n    module[\"hot\"].dispose(() => {\r\n        const oldRootElem = document.querySelector(\"app-root\");\r\n        const newRootElem = document.createElement(\"app-root\");\r\n        oldRootElem.parentNode.insertBefore(newRootElem, oldRootElem);\r\n        platformBrowserDynamic().destroy();\r\n    });\r\n}\r\n\r\nif (document.readyState === \"complete\") {\r\n    bootApplication();\r\n} else {\r\n    document.addEventListener(\"DOMContentLoaded\", bootApplication);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./ClientApp/boot.ts"],"sourceRoot":"webpack:///"}